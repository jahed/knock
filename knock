#!/usr/bin/env bash
set -euo pipefail

name="knock"
version="v2.2.1"

function print_help {
  cat <<EOF
NAME
  ${name} - a simple port knocker

SYNOPSIS
  ${0} <host>

DESCRIPTION
  Given a host, looks up its port sequence and knocks on it.

  Version:   ${version}
  Homepage:  https://github.com/jahed/${name}
  Donate:    https://jahed.dev/donate

OPTIONS
  <host>
    Target host. Where you want to knock. Must exist in config file.

  -c, --config <config>
    Config file location. Defaults to ~/.config/knock/hosts.json.

  -h, --help
    Prints this help message.

  --version
    Prints the version.

CONFIG
  The config file must have the following structure:

  {
    "example.com": ["1000", "2000", "3000"]
  }

  Such that executing:

    ${0} --config ./knock.json example.com

  Will knock on example.com at ports 1000 then 2000 then 3000.

DEPENDENCIES
  Required
    ncat    https://nmap.org/ncat/
    Bash    https://en.wikipedia.org/wiki/Bash_%28Unix_shell%29

COPYRIGHT
  Copyright (C) 2022 Jahed Ahmed

  This program is free software: you can redistribute it and/or modify
  it under the terms of the GNU Affero General Public License as published by
  the Free Software Foundation, either version 3 of the License, or any later version.

  This program is distributed in the hope that it will be useful,
  but WITHOUT ANY WARRANTY; without even the implied warranty of
  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  GNU Affero General Public License for more details.

  You should have received a copy of the GNU Affero General Public License
  along with this program.  If not, see <https://www.gnu.org/licenses/>.
EOF
}

function failure {
  echo "error:        ${1}"
  echo "for help use: ${0} --help"
  exit 1
}

POSITIONAL=()
while [[ $# -gt 0 ]]; do
  key="$1"

  case $key in
    -h|--help)
      print_help
      exit 0
      ;;
    --version)
      echo "${name} ${version}"
      exit 0
      ;;
    -c|--config)
      config_path="${2}"
      shift
      shift
      ;;
    -*)
      failure "unknown argument $1"
      exit 1
      ;;
    *)
      POSITIONAL+=("$1")
      shift
      ;;
  esac
done
set -- "${POSITIONAL[@]}"

if test -z "${config_path}"; then
  config_path='~/.config/knock/hosts.json'
fi

target="${1}"
sequence="$(jq -r ".[\"${target}\"] | join(\" \")" "${config_path}")"

for port in ${sequence}; do
  nc -z -w 1 "${target}" "${port}" || true
done
